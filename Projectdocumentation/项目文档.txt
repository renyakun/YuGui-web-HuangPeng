searchlist
报告编号   reportno
状态 status
报告时间  reporttime
报告处理人 reportrealname
操作 actions


// import PageHeaderWrapper from '@/components/PageHeaderWrapper';
// import StandardTable from '@/components/StandardTable';
// import { Badge, Button, Card, Col, DatePicker, Divider, Dropdown, Form, Icon, Input, InputNumber, Menu, message, Modal, Radio, Row, Select, Steps, Table } from 'antd';
// import { connect } from 'dva';
// import moment from 'moment';
// import React, { Fragment, PureComponent } from 'react';
// import styles from './TableList.less';
// import { searchLabels } from '@/common/labels';
// import { search } from '@/common/data';

// const FormItem = Form.Item;
// const { Option } = Select;


// const statusMap = ['default', 'processing', 'success', 'error'];
// const status = ['新建', '已审核', '已审批', '已归档'];

// const searchColumns = Object.keys(searchLabels).map(key => {
//   if (key === 'status') {
//     return {
//       title: searchLabels[key],
//       filters: [
//         {
//           text: status[0],
//           value: 0,
//         },
//         {
//           text: status[1],
//           value: 1,
//         },
//         {
//           text: status[2],
//           value: 2,
//         },
//         {
//           text: status[3],
//           value: 3,
//         },
//       ],
//       render(val) {
//         return <Badge status={statusMap[val]} text={status[val]} />;
//       },
//     }
//   }
//   // if(key === 'reportTime')color="#2db7f5"
//   //     title: searchLabels[key],
//   //     sorter: true,
//   //     render: val => <span>{moment(val).format('YYYY-MM-DD HH:mm:ss')}</span>,
//   // }
//   if (key === 'actions') {
//     return {
//       title: searchLabels[key],
//       render: ({ reportNo }) => (
//         <a>
//           查看报告
//               </a>
//       ),
//     };
//   }
//   return {
//     key,
//     title: searchLabels[key],
//     dataIndex: key,
//   };
// });

// @connect(({ rule, loading }) => ({
//   rule,
//   loading: loading.models.rule,
// }))

// @Form.create()
// class SearchReportList extends PureComponent {
//   constructor(props) {
//     super(props);
//     this.state = {
//       formValues: {},
//     }
//   }


//   // columns = [
//   //   {
//   //     title: '规则名称',
//   //     dataIndex: 'name',
//   //   },
//   //   {
//   //     title: '描述',
//   //     dataIndex: 'desc',
//   //   },
//   //   {
//   //     title: '服务调用次数',
//   //     dataIndex: 'callNo',
//   //     sorter: true,
//   //     align: 'right',
//   //     render: val => `${val} 万`,
//   //     // mark to display a total number
//   //     needTotal: true,
//   //   },
//   //   {
//   //     title: '状态',
//   //     dataIndex: 'status',
//   //     filters: [
//   //       {
//   //         text: status[0],
//   //         value: 0,
//   //       },
//   //       {
//   //         text: status[1],
//   //         value: 1,
//   //       },
//   //       {
//   //         text: status[2],
//   //         value: 2,
//   //       },
//   //       {
//   //         text: status[3],
//   //         value: 3,
//   //       },
//   //     ],
//   //     render(val) {
//   //       return <Badge status={statusMap[val]} text={status[val]} />;
//   //     },
//   //   },
//   //   {
//   //     title: '上次调度时间',
//   //     dataIndex: 'updatedAt',
//   //     sorter: true,
//   //     render: val => <span>{moment(val).format('YYYY-MM-DD HH:mm:ss')}</span>,
//   //   },
//   //   {
//   //     title: '操作',
//   //     render: (text, record) => (
//   //       <Fragment>
//   //         <a onClick={() => this.handleUpdateModalVisible(true, record)}>配置</a>
//   //         <Divider type="vertical" />
//   //         <a href="">订阅警报</a>
//   //       </Fragment>
//   //     ),
//   //   },
//   // ];


//   handleSearch = e => {
//     e.preventDefault();

//     const { dispatch, form } = this.props;

//     form.validateFields((err, fieldsValue) => {
//       if (err) return;
//       if (!err) {
//         console.log(fieldsValue);
//       }

//       const values = {
//         ...fieldsValue,
//         updatedAt: fieldsValue.updatedAt && fieldsValue.updatedAt.valueOf(),
//       };

//       this.setState({
//         formValues: values,
//       });

//       dispatch({
//         type: 'rule/fetch',
//         payload: values,
//       });
//     });
//   };

//   handleFormReset = () => {
//     const { form, dispatch } = this.props;
//     form.resetFields();
//     this.setState({
//       formValues: {},
//     });
//     dispatch({
//       type: 'rule/fetch',
//       payload: {},
//     });
//   };


//   renderSimpleForm() {
//     const {
//       form: { getFieldDecorator },
//     } = this.props;
//     return (
//       <Form onSubmit={this.handleSearch} layout="inline">
//         <Row gutter={{ md: 8, lg: 24, xl: 48 }}>
//           <Col md={8} sm={24}>
//             <FormItem label="报告编号">
//               {getFieldDecorator('reportNo')(<Input placeholder="请输入" />)}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <FormItem label="处理状态">
//               {getFieldDecorator('status')(
//                 <Select placeholder="请选择" style={{ width: '100%' }}>
//                   <Option value="0">新建</Option>
//                   <Option value="1">已审核</Option>
//                   <Option value="3">已审批</Option>
//                   <Option value="4">已归档</Option>
//                 </Select>
//               )}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <span className={styles.submitButtons}>
//               <Button type="primary" htmlType="submit">
//                 查询
//               </Button>
//               <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>
//                 重置
//               </Button>
//               <a style={{ marginLeft: 8 }} onClick={this.toggleForm}>
//                 展开 <Icon type="down" />
//               </a>
//             </span>
//           </Col>
//         </Row>
//       </Form>
//     );
//   }

//   renderAdvancedForm() {
//     const {
//       form: { getFieldDecorator },
//     } = this.props;
//     return (
//       <Form onSubmit={this.handleSearch} layout="inline">
//         <Row gutter={{ md: 8, lg: 24, xl: 48 }}>
//           <Col md={8} sm={24}>
//             <FormItem label="规则名称">
//               {getFieldDecorator('name')(<Input placeholder="请输入" />)}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <FormItem label="使用状态">
//               {getFieldDecorator('status')(
//                 <Select placeholder="请选择" style={{ width: '100%' }}>
//                   <Option value="0">新建</Option>
//                   <Option value="1">已审核</Option>
//                   <Option value="3">已审批</Option>
//                   <Option value="4">已归档</Option>
//                 </Select>
//               )}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <FormItem label="调用次数">
//               {getFieldDecorator('number')(<InputNumber style={{ width: '100%' }} />)}
//             </FormItem>
//           </Col>
//         </Row>
//         <Row gutter={{ md: 8, lg: 24, xl: 48 }}>
//           <Col md={8} sm={24}>
//             <FormItem label="更新日期">
//               {getFieldDecorator('date')(
//                 <DatePicker style={{ width: '100%' }} placeholder="请输入更新日期" />
//               )}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <FormItem label="使用状态">
//               {getFieldDecorator('status3')(
//                 <Select placeholder="请选择" style={{ width: '100%' }}>
//                   <Option value="0">关闭</Option>
//                   <Option value="1">运行中</Option>
//                 </Select>
//               )}
//             </FormItem>
//           </Col>
//           <Col md={8} sm={24}>
//             <FormItem label="使用状态">
//               {getFieldDecorator('status4')(
//                 <Select placeholder="请选择" style={{ width: '100%' }}>
//                   <Option value="0">关闭</Option>
//                   <Option value="1">运行中</Option>
//                 </Select>
//               )}
//             </FormItem>
//           </Col>
//         </Row>
//         <div style={{ overflow: 'hidden' }}>
//           <div style={{ float: 'right', marginBottom: 24 }}>
//             <Button type="primary" htmlType="submit">
//               查询
//             </Button>
//             <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>
//               重置
//             </Button>
//             <a style={{ marginLeft: 8 }} onClick={this.toggleForm}>
//               收起 <Icon type="up" />
//             </a>
//           </div>
//         </div>
//       </Form>
//     );
//   }

//   toggleForm = () => {
//     const { expandForm } = this.state;
//     this.setState({
//       expandForm: !expandForm,
//     });
//   };

//   renderForm() {
//     const { expandForm } = this.state;
//     return expandForm ? this.renderAdvancedForm() : this.renderSimpleForm();
//   }






//   render() {
//     const { selectedRows, modalVisible, updateModalVisible, stepFormValues } = this.state;


//     return (
//       <PageHeaderWrapper title="查询表格">
//         <Card bordered={false}>
//           <div className={styles.tableList}>
//             <div className={styles.tableListForm}>{this.renderForm()}</div>
//             <Table
//               dataSource={search}
//               columns={searchColumns}
//               pagination={false}
//               //loading={listLoading}
//               rowKey="reportNo"
//             />
//           </div>
//         </Card>
//       </PageHeaderWrapper>
//     );
//   }
// }

// export default SearchReportList;